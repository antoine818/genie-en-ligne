
<?php

class Utilisateur {
	
    private $pseudo;
    private $mot_de_passe;
    private $nom;
    private $prenom;
    private $courriel;
    private $role;
    private $id;

    public function __construct($id = 0, $pseudo = " ", $mot_de_passe = " ", $nom = " ", $prenom = " ", $courriel= " ", $role = " ") {
        $this->setId($id);
        $this->setPseudo($pseudo);
        $this->setMDP($mot_de_passe);
        $this->setNom($nom);
        $this->setPrenom($prenom);
        $this->setCourriel($courriel);
        $this->setRole($role);
    }

    public function insererInscription() {
        $oConnexion = new MySqliLib();
        $oResultat = $oConnexion->executer("INSERT INTO utilisateurs (`pseudo`, `mot_de_passe`, `nom`, `prenom`, `courriel`, `role`)
                                            VALUES ('{$this->pseudo}', '{$this->mot_de_passe}', '{$this->nom}', '{$this->prenom}', '{$this->courriel}', '{$this->role}')");
        //Ta requête n'aurait pas fonctionné puisqu'il manquait les apostrophes autour des valeur (après le mot VALUES). Les accolades aident un peu à visualiser le tout.
        
        // Les {} permettent de délimiter les variables à l'intérieur d'une chaine de caractères en PHP. Par exemple:
        //
        //      echo "Bonjour".$aNom[$i].", comment ça va?";
        //
        // équivaut exactement à 
        //
        //      echo "Bonjour {$aNom[$i]}, comment ça va?";
        //
        // Il faut savoir que ceci s'applique uniquement aux variables contenues dans des "", puisque PHP n'interprète par les variables dans des ''.
        //        
        //-------------------------------------------------------------------------------------------------------------------------------------------
        //
        // Ceci permet de définir la propriété id de l'utilisateur avec le ID généré automatiquement par la BD lors de l'insertion.
        $this->setId($oConnexion->getInsertId());
        
        //Regarde dans Basecamp, j'ai envoyé un message pour ajouter 3 lignes de code à la classe MySqliLib.class.php
    }

    private function setPseudo($pseudo) {
        $this->pseudo = $pseudo;
    }
    private function setMDP($mot_de_passe) {
        $this->mot_de_passe = $mot_de_passe;
    }
    public function setNom($sNom) {
        //Validation à l'aide de la classe TypeException. Une exception est lancée (throw) si le paramètre n'est pas conforme.
        TypeException::estVide($sNom);
        TypeException::estString($sNom);
        
        //Ce code n'est pas exécuté si une erreur est lancée.
        $this->nom = $sNom;
    }
    public function setPrenom($prenom) {
        $this->prenom = $prenom;
    }
    private function setCourriel($courriel) {
        $this->courriel = $courriel;
    }
    private function setRole($role) {
        $this->role = $role;
    }
    public function setId($id){
        $this->id = $id;
    }
    
    
     public function getMDP() {
        return $this->mot_de_passe;
    }
    public function getPseudo() {
        return $this->pseudo;
    }
    public function getNom() {
        return $this->nom;
    }
    public function getPrenom() {
        return $this->prenom;
    }
    public function getCourriel() {
        return $this->courriel;
    }
    public function getRole() {
        return $this->role;
    }
    public function getId(){
        return $this->id;
    }
}

?>